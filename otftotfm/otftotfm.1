'\"t
.ds V 0.7
.de M
.BR "\\$1" "(\\$2)\\$3"
..
.de Sp
.if n .sp
.if t .sp 0.4
..
.TH OTFTOTFM 1 "LCDF Typetools" "Version \*V"
.SH NAME
otftotfm \- create TeX PL metrics files from PostScript OpenType fonts
.SH SYNOPSIS
.B otftotfm
\%[\fB-a\fR]
\%[\fBoptions\fR]
\%\fIotffile\fR [\fIfontname\fR]
'
.SH DESCRIPTION
.BR Otftotfm
creates TeX font metrics and a 
.M dvips 1 -like
encoding file that correspond, as far as possible, to a PostScript-flavored
OpenType font. The generated files are written into the current directory,
or, with the
.B \-a 
option, into a TeX Directory Structure.
.LP
.\"OpenType supports extensive substitutions and complex positionings that TeX
.\"can't handle. 
Many OpenType instructions useful for the Latin script are supported by
TeX, including:
.IP * 3
Glyph substitutions, such as replacing 'a' with small caps 
.SM 'A'.
.IP * 3
Pair kerns, such as moving 'AV' closer together.
.IP * 3
Ligatures, such as replacing 'f' and 'i' with an integrated 'fi'
glyph.
.IP * 3
Simple glyph positionings, such as adding extra space on either side of 'W'.
.LP
Otftotfm reads an OpenType font, turns on any font features you choose,
selects the instructions that TeX supports, and generates font metrics and
a dvips encoding file that, together, implement those instructions. By
default otftotfm creates TFM and VF files using the
.M pltotf 1
and
.M vptovf 1
programs, but supply the
.B \-\-pl
option and it will generate human-readable PL and VPL files.
'
.SS Automatic mode
.PP
Automatic mode, triggered by the
.BR \-a / \-\-automatic
option, is the easiest way to use otftotfm. In automatic mode, otftotfm
will install the font metrics and encoding files where TeX can find them,
and additionally install a Type 1 font and mapping for dvips. This requires
a TeX installation that follows the TeX Directory Structure standard
(http://www.tug.org/tds/), such as most Unix TeX installations.
'
.PP
Simple instructions for web2c-based installations: First, create a
.I $HOME/texmf
directory, if you don't have one already. Add a
.I $HOME/texmf/dvips
subdirectory, and create a file
.I $HOME/texmf/dvips/config.ps
containing the like "p +lcdftools.map" (or add that line to your existing
.I config.ps
file); this will help
.M dvips 1
find your new fonts. Now, after running "otftotfm
.B \-a
.IR file .otf
.IR fontname \&",
you will immediately be able to refer to the font in TeX using the
.I fontname
you supplied to otftotfm. (Of course, you will have to do more work to make
the font conveniently accessible from LaTeX or ConTeXt.)
'
.PP
In automatic mode, otftotfm first searches your $TEXMF path for a writable
directory. Often this will be your "$HOME/texmf" directory; you might want
to create this directory now. It then installs files under that directory
tree. Specifically, it places files in file-type-specific subdirectories,
as follows:
'
.TS
l	l	l	.
\fBFile type\fR	\fBDirectory\fR	\fBFilename\fR
TFM	TEXMF/fonts/tfm/\fIvendor\fR/\fItypeface\fR/	\fIfontname\fR[--base].tfm
VF	TEXMF/fonts/vf/\fIvendor\fR/\fItypeface\fR/	\fIfontname\fR.vf
PL	TEXMF/fonts/pl/\fIvendor\fR/\fItypeface\fR/	\fIfontname\fR[--base].pl
VPL	TEXMF/fonts/vpl/\fIvendor\fR/\fItypeface\fR/	\fIfontname\fR.vpl
encoding	TEXMF/dvips/	a_\fIsignature\fR.enc
PFB font	TEXMF/fonts/type1/\fIvendor\fR/\fItypeface\fR/	\fIPSfontname\fR.pfb
psfonts.map	TEXMF/dvips/	\fIvendor\fR.map
.TE
.PP
"TEXMF" stands for the writable $TEXMF directory. \fIFontname\fR is the
font name supplied as otftotfm's second argument, and \fIPSfontname\fR is
the PostScript name of the input font. The \fIvendor\fR and \fItypeface\fR
strings are required by TDS; they default to "lcdftools" and the font's
family name, respectively, but see the
.B \-\-vendor
and
.B \-\-typeface
options below. \fISignature\fR is an opaque 6-character encoding signature.
.PP
You can override these directories with environment variables and options
as follows. Options take precedence over environment variables.
'
.TS
l	l	l	.
\fBFile type\fR	\fBEnvironment variable\fR	\fBOption\fR
TFM	TFMDESTDIR	\-\-tfm\-directory
VF	VFDESTDIR	\-\-vf\-directory
PL	PLDESTDIR	\-\-pl\-directory
VPL	VPLDESTDIR	\-\-vpl\-directory
encoding	ENCODINGDESTDIR	\-\-encoding\-directory
PFB font	T1DESTDIR	\-\-type1\-directory
psfonts.map	\-	\-\-map\-file
.TE
.PP
Otftotfm will update the
.I TEXMF/ls-R
file when installing files under TEXMF.
'
.SH OPTIONS
With long options, you need type only as many characters as will make the
option unique.
.SS Font feature options
.PD 0
.TP 5
.BI \-s " script\fR[.\fIlang\fR], " \-\-script= "script\fR[.\fIlang\fR]"
Apply features suitable to the script system
.I script
and language system
.IR lang .
Scripts and language systems are two-to-four-letter names assigned by
Microsoft and Adobe. Examples include "latn" (Latin script), "grek" (Greek
script), and "yi.YIC" (Yi script with classic characters). If
.I lang
is not specified, otftotfm will use the default language system for that
script. You can give this option multiple times. Run "otftotfm
\-\-query\-scripts \fIfont\fR" to see the list of scripts and languages a
font supports. Defaults to "latn".
'
.Sp
.TP 5
.BI \-f " feature\fR, " \-\-feature= "feature"
Activate the feature named
.IR feature .
Features are four-letter names assigned by Microsoft and Adobe; they are
meant to correspond to font behaviors, such as kerning or small-capitals.
Examples include "liga" (default ligatures), "dlig" (discretionary
ligatures), "kern" (kerning), and "c2sc" (replacing capitals with small
capitals). Give this option multiple times to apply multiple features. Run
"otftotfm \-\-query\-features [--script options] \fIfont\fR" to see the list
of features a font supports for the specified collection of scripts.
Defaults to any features required by the selected scripts.
'
.Sp
.TP 5
.BI \-e " encoding\fR, " \-\-encoding= encoding
Selects the
.M dvips 1
encoding used as a starting point. Otftotfm will search for
.IR encoding [.enc]
the same way that
.B dvips
would, so you may not need to give a full pathname. Defaults to the font's
encoding. See ENCODINGS, below, for more information on how otftotfm uses
encodings.
'
.Sp
.TP 5
.BI \-\-literal\-encoding= encoding
Selects the
.M dvips 1
encoding used for the font. No glyph substitutions will be permitted, so
the output encoding will equal the input encoding (and otftotfm will not
generate an output encoding).
'
.Sp
.TP 5
.BI \-E " amt\fR, " \-\-extend= amt
Widen, or extend, the font by a factor of
.IR amt .
Like
.M afm2tfm 1 's
.B \-e
option.
'
.Sp
.TP 5
.BI \-S " amt\fR, " \-\-slant= amt
Oblique, or slant, the font by
.IR amt .
Like
.M afm2tfm 1 's
.B \-s
option.
.PD
'
'
.SS Automatic mode options
'
.PD 0
.TP 5
.BI \-a "\fR, " \-\-automatic
Select automatic mode.
'
.Sp
.TP 5
.BI \-v " vendor\fR, " \-\-vendor= vendor
Set the font vendor name, which is used to locate files within the TDS.
Defaults to "lcdftools".
'
.Sp
.TP 5
.BI \-\-typeface= typeface
Set the font typeface name, which is used to locate files within the TDS.
Defaults to the current font's family name with unsuiable characters
removed.
'
.Sp
.TP 5
.BI \-\-no\-type1
Do not use
.M cfftot1 1
to create Type 1 fonts corresponding to the OpenType input fonts.
.PD
'
'
.SS Output options
.Sp
.TP 5
.BI \-n " fontname\fR, " \-\-name= fontname
Set the name of the output font, which is used in the
.M dvips 1
.I psfonts.map
line and, in automatic mode, to generate the output filename. The default
is derived from the output filename in manual mode, and from the OpenType
font's name and the features you selected in automatic mode.
'
.Sp
.TP 5
.BI \-p "\fR, " \-\-pl
Output human-readable PL and VPL metrics, not binary TFM and VF metrics.
'
.Sp
.TP 5
.BI \-\-no\-virtual
Do not generate virtual fonts (VFs and VPLs). Otftotfm will warn if the
selected font features cannot be implemented without virtual fonts.
'
.Sp
.TP 5
.BI \-\-no\-encoding
Do not generate an encoding file.
'
.Sp
.TP 5
.BI \-\-no\-map
Do not generate a
.I psfonts.map
line for the font.
.PD
'
'
.SS File location options
.PD 0
.TP 5
.BI \-\-tfm\-directory= dir
The directory used for output TFM font metrics. Defaults to the TFMDESTDIR
environment variable. If that's not set, it defaults to "." in manual mode,
or a TDS directory in automatic mode (see above).
'
.Sp
.TP 5
.BI \-\-pl\-directory= dir
.TP 5
.BI \-\-vf\-directory= dir
.TP 5
.BI \-\-vpl\-directory= dir
.TP 5
.BI \-\-encoding\-directory= dir
.TP 5
.BI \-\-type1\-directory= dir
These options act like
.BR \-\-tfm\-directory
for other file types. The default environment variables are described
above. All default to ".".
'
.Sp
.TP 5
.BI \-\-map\-file= filename
Set file in which otftotfm will write a
.I psfonts.map
line for the font. The default is standard out in manual mode, and
"TEXMF/dvips/\fIvendor\fR.map" elsewhere.
.PD
'
'
.SS Miscellaneous options
.PD 0
.TP 5
.BR \-\-qs ", " \-\-query\-scripts
Print the scripts and language systems supported by the specified font and
exit. The scripts are printed one per line, with human-readable
descriptions; for example:
.nf
  cyrl            Cyrillic
  grek            Greek
  latn            Latin
  latn.TUR        Latin/Turkish
.fi
'
.Sp
.TP 5
.BR \-\-qf ", " \-\-query\-features
Print the features supported by the specified font, in the specified
scripts and language systems, and exit. The scripts are printed one per
line, with human-readable descriptions; for example:
.nf
  aalt    Access All Alternates
  c2sc    Small Capitals From Capitals
  case    Case-Sensitive Forms
  cpsp    Capital Spacing
  \&...
  zero    Slashed Zero
.fi
'
.Sp
.TP 5
.BI \-\-glyphlist= file
Use
.I file
as the Adobe glyph list, which helps translate glyph names to Unicode code
points. See ENCODINGS, below, for more information.
'
.Sp
.TP 5
.BR \-V ", " \-\-verbose
Write progress messages to standard error.
'
.Sp
.TP 5
.BR \-\-no\-create
Do not create or modify any files. Instead, write messages about the
program's hypothetical progress to standard error.
'
.Sp
.TP 5
.BR \-q ", " \-\-quiet
Do not generate any error messages.
'
.Sp
.TP 5
.BR \-h ", " \-\-help
Print usage information and exit.
'
.Sp
.TP 5
.BR \-\-version
Print the version number and some short non-warranty information and exit.
.PD
'
.SH ENCODINGS
.PP
Otftotfm uses its input encodings by translating glyph names into Unicode
code points. For example, if an input encoding has "/dotlessi" at position
10, then otftotfm detects that the user wants to encode Unicode character
U+0131 LATIN SMALL LETTER DOTLESS I at position 10. The output encoding
will use whatever glyph the font suggests for that code point, given the
collection of features you chose.
.PP
You can control this process with "UNICODING" comments in the input
encoding file. UNICODING comments have the following format:
.nf
  % UNICODING \fIglyph\fR =: \fIchoice1\fR [\fIchoice2\fR ...] ;
.fi
\fIGlyph\fR and the
.IR choice s
are PostScript glyph names. This comment tells otftotfm that the glyph named
.I glyph 
translates into the first Unicode code point in the
.I choice
list that the font supports. For example, this UNICODING:
.nf
  % UNICODING Delta =: Deltagreek Delta ;
.fi
tells otftotfm that U+0394 GREEK CAPITAL LETTER DELTA should be preferred to
U+2206 INCREMENT as an encoding for "/Delta". You can also map a glyph to
nothing to remove that glyph from the input encoding; for instance:
.nf
  % UNICODING ff =: ; fi =: ; fl =: ; ffi =: ; ffl =: ;
.fi
As with LIGKERN comments, you can specify multiple UNICODINGs per line;
separate them with spaced semicolons.
.PP
Glyphs used by ligatures are added to the encoding in any empty spaces,
using their original locations when possible.
.PP
Ligatures can be added and kerns inhibited by LIGKERN comments in the
encoding, as in
.M afm2tfm 1 .
Otftotfm also supports extended syntax for inhibiting ligatures.
This command:
.nf
  % LIGKERN \fIglyph1\fR {L} \fIglyph2\fR ;
.fi
inhibits any ligature between
.I glyph1
and
.IR glyph2 .
"{K}", like "{}", inhibits kerns only, and "{LK}" and "{KL}" inhibit both
ligatures and kerns. Otftotfm parses "% LIGKERNX" comments as well as "%
LIGKERN" comments; it's probably better to put the extended commands in
LIGKERNX blocks, since that avoids confusing
.M afm2tfm 1 .
'
.SH "BUGS"
.LP
Presumably some context-sensitive positionings and ligatures could be
implemented with TeX's boundary character, but otftotfm doesn't do that yet.
.LP
More positionings and ligatures could be supported with the help of virtual
fonts.
'
.SH "SEE ALSO"
.LP
.M pltotf 1 ,
.M tftopl 1 ,
.M vptovf 1 ,
.M afm2tfm 1 ,
.M dvips 1 ,
.M cfftot1 1
.LP
.I "Adobe Type 1 Font Format"
.LP
Adobe Technical Notes #5176,
.IR "The Compact Font Format Specification" ,
and #5177,
.I "The Type 2 Charstring Format"
.LP
.IR "OpenType Specification" ,
Version 1.4
.LP
.IR "A Directory Structure for TeX Files" ,
http://www.tug.org/tds/
.LP
.IR "Kpathsea: A library for path searching" ,
http://www.tug.org/kpathsea/
'
.SH AUTHOR
Eddie Kohler (kohler@icir.org)
.PP
Thanks to Karl Berry, Adam Lindsay, and Bruce D'Arcus for suggestions, bug
reports, and help.
